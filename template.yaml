AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: scrapper-data

Globals:
  Function:
    Timeout: 20

Resources:
  MyScrapperSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "MyScrapperSQS.fifo"
      FifoQueue: true

  Subscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn: arn:aws:sns:us-east-1:381492193067:nfe-published.fifo
      Endpoint: !GetAtt MyScrapperSQS.Arn
      Protocol: sqs
      RawMessageDelivery: true

  MyScrapperSQSQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      Queues:
        - !Ref MyScrapperSQS
      PolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal: "*"
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt MyScrapperSQS.Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": arn:aws:sns:us-east-1:381492193067:nfe-published.fifo

  MyScrapperFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: scrapper/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        SqsEvento:
          Type: SQS
          Properties:
            Queue: !GetAtt MyScrapperSQS.Arn
      Policies:
        - Statement:
            - Effect: "Allow"
              Action:
                - "sns:Publish"
              Resource: "*"
            - Effect: "Allow"
              Action:
                - "sqs:ReceiveMessage"
                - "sqs:DeleteMessage"
                - "sqs:GetQueueAttributes"
              Resource: "*"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - app.ts
